
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.sql.Date;
import java.text.NumberFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.time.temporal.ChronoUnit;
import java.util.ArrayList;
import java.util.Locale;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultCellEditor;
import javax.swing.JCheckBox;
import javax.swing.JDialog;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.SwingWorker;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import javax.swing.table.TableColumnModel;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author AVOTRA
 */
public class UpdateVisitListField2 extends javax.swing.JFrame {

    /**
     * Creates new form UpdateVisitListField2
     */
    SimpleDateFormat sdf = new SimpleDateFormat("dd / MM / yyyy");
    DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd/MM/yyyy");
    Main mainF = new Main();
    NumberFormat nbFormat = NumberFormat.getInstance(Locale.FRANCE);
    public String[] lastData = new String[6];
    public UpdateVisitListField2(Main mainFrame) {
        mainF = mainFrame;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        sideBar1 = new training.SideBar();
        sideBar15 = new training.SideBar();
        customerSurname = new javax.swing.JTextField();
        jPanel15 = new javax.swing.JPanel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        sideBar16 = new training.SideBar();
        customerFirstName = new javax.swing.JTextField();
        jPanel16 = new javax.swing.JPanel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        sideBar14 = new training.SideBar();
        customerPhone = new javax.swing.JTextField();
        jPanel14 = new javax.swing.JPanel();
        phoneField = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        sideBar18 = new training.SideBar();
        dayNb = new javax.swing.JTextField();
        jPanel18 = new javax.swing.JPanel();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        sideBar17 = new training.SideBar();
        enterDate = new javax.swing.JTextField();
        jPanel17 = new javax.swing.JPanel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        sideBar19 = new training.SideBar();
        exitDate = new javax.swing.JTextField();
        jPanel19 = new javax.swing.JPanel();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        sideBar20 = new training.SideBar();
        roomsNb = new javax.swing.JTextField();
        jPanel20 = new javax.swing.JPanel();
        jLabel29 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        sideBar21 = new training.SideBar();
        roomsCount = new javax.swing.JTextField();
        jPanel21 = new javax.swing.JPanel();
        jLabel31 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        sideBar22 = new training.SideBar();
        jPanel22 = new javax.swing.JPanel();
        jLabel33 = new javax.swing.JLabel();
        total = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        updateVisitListTable = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        sideBar1.setBackground(new java.awt.Color(245, 245, 245));

        customerSurname.setBorder(null);
        sideBar15.add(customerSurname, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 12, 200, 30));

        jPanel15.setBackground(new java.awt.Color(255, 255, 255));

        jLabel19.setForeground(new java.awt.Color(102, 0, 51));
        jLabel19.setText("Nom");

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel19, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 14, Short.MAX_VALUE)
                .addContainerGap())
        );

        sideBar15.add(jPanel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 0, 50, 20));

        jLabel20.setBackground(new java.awt.Color(255, 255, 255));
        jLabel20.setIcon(new javax.swing.ImageIcon(getClass().getResource("/training/Images/bookingData.png"))); // NOI18N
        sideBar15.add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(-3, 0, 250, 50));

        sideBar1.add(sideBar15, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 50, 250, -1));

        customerFirstName.setBorder(null);
        sideBar16.add(customerFirstName, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 12, 200, 30));

        jPanel16.setBackground(new java.awt.Color(255, 255, 255));

        jLabel21.setForeground(new java.awt.Color(102, 0, 51));
        jLabel21.setText("Prénoms");

        javax.swing.GroupLayout jPanel16Layout = new javax.swing.GroupLayout(jPanel16);
        jPanel16.setLayout(jPanel16Layout);
        jPanel16Layout.setHorizontalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel21, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel16Layout.setVerticalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 14, Short.MAX_VALUE)
                .addContainerGap())
        );

        sideBar16.add(jPanel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 0, 60, 20));

        jLabel22.setBackground(new java.awt.Color(255, 255, 255));
        jLabel22.setIcon(new javax.swing.ImageIcon(getClass().getResource("/training/Images/bookingData.png"))); // NOI18N
        sideBar16.add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(-3, 0, 250, 50));

        sideBar1.add(sideBar16, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 50, 250, -1));

        customerPhone.setBorder(null);
        sideBar14.add(customerPhone, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 12, 200, 30));

        jPanel14.setBackground(new java.awt.Color(255, 255, 255));

        phoneField.setForeground(new java.awt.Color(102, 0, 51));
        phoneField.setText("Téléphone");

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(phoneField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addComponent(phoneField, javax.swing.GroupLayout.PREFERRED_SIZE, 14, Short.MAX_VALUE)
                .addContainerGap())
        );

        sideBar14.add(jPanel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 0, 70, 20));

        jLabel18.setBackground(new java.awt.Color(255, 255, 255));
        jLabel18.setIcon(new javax.swing.ImageIcon(getClass().getResource("/training/Images/bookingData.png"))); // NOI18N
        sideBar14.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(-3, 0, 250, 50));

        sideBar1.add(sideBar14, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 50, 250, -1));

        dayNb.setBorder(null);
        dayNb.setFocusable(false);
        sideBar18.add(dayNb, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 12, 200, 30));

        jPanel18.setBackground(new java.awt.Color(255, 255, 255));

        jLabel25.setForeground(new java.awt.Color(102, 0, 51));
        jLabel25.setText("Durée");

        javax.swing.GroupLayout jPanel18Layout = new javax.swing.GroupLayout(jPanel18);
        jPanel18.setLayout(jPanel18Layout);
        jPanel18Layout.setHorizontalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel18Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel25, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel18Layout.setVerticalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel18Layout.createSequentialGroup()
                .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 14, Short.MAX_VALUE)
                .addContainerGap())
        );

        sideBar18.add(jPanel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 0, 50, 20));

        jLabel26.setBackground(new java.awt.Color(255, 255, 255));
        jLabel26.setIcon(new javax.swing.ImageIcon(getClass().getResource("/training/Images/bookingData.png"))); // NOI18N
        sideBar18.add(jLabel26, new org.netbeans.lib.awtextra.AbsoluteConstraints(-3, 0, 250, 50));

        sideBar1.add(sideBar18, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 120, 250, -1));

        enterDate.setBorder(null);
        enterDate.setFocusable(false);
        sideBar17.add(enterDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 12, 200, 30));

        jPanel17.setBackground(new java.awt.Color(255, 255, 255));

        jLabel23.setForeground(new java.awt.Color(102, 0, 51));
        jLabel23.setText("Date d'entrée");

        javax.swing.GroupLayout jPanel17Layout = new javax.swing.GroupLayout(jPanel17);
        jPanel17.setLayout(jPanel17Layout);
        jPanel17Layout.setHorizontalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel23, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel17Layout.setVerticalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 14, Short.MAX_VALUE)
                .addContainerGap())
        );

        sideBar17.add(jPanel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 0, 90, 20));

        jLabel24.setBackground(new java.awt.Color(255, 255, 255));
        jLabel24.setIcon(new javax.swing.ImageIcon(getClass().getResource("/training/Images/bookingData.png"))); // NOI18N
        sideBar17.add(jLabel24, new org.netbeans.lib.awtextra.AbsoluteConstraints(-3, 0, 250, 50));

        sideBar1.add(sideBar17, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 120, 250, -1));

        exitDate.setBorder(null);
        exitDate.setFocusable(false);
        sideBar19.add(exitDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 12, 200, 30));

        jPanel19.setBackground(new java.awt.Color(255, 255, 255));

        jLabel27.setForeground(new java.awt.Color(102, 0, 51));
        jLabel27.setText("Date de sortie");

        javax.swing.GroupLayout jPanel19Layout = new javax.swing.GroupLayout(jPanel19);
        jPanel19.setLayout(jPanel19Layout);
        jPanel19Layout.setHorizontalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel19Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel27, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel19Layout.setVerticalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel19Layout.createSequentialGroup()
                .addComponent(jLabel27, javax.swing.GroupLayout.PREFERRED_SIZE, 14, Short.MAX_VALUE)
                .addContainerGap())
        );

        sideBar19.add(jPanel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 0, 90, 20));

        jLabel28.setBackground(new java.awt.Color(255, 255, 255));
        jLabel28.setIcon(new javax.swing.ImageIcon(getClass().getResource("/training/Images/bookingData.png"))); // NOI18N
        sideBar19.add(jLabel28, new org.netbeans.lib.awtextra.AbsoluteConstraints(-3, 0, 250, 50));

        sideBar1.add(sideBar19, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 120, 250, -1));

        roomsNb.setBorder(null);
        roomsNb.setFocusable(false);
        sideBar20.add(roomsNb, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 12, 200, 30));

        jPanel20.setBackground(new java.awt.Color(255, 255, 255));

        jLabel29.setForeground(new java.awt.Color(102, 0, 51));
        jLabel29.setText("N° Chambre");

        javax.swing.GroupLayout jPanel20Layout = new javax.swing.GroupLayout(jPanel20);
        jPanel20.setLayout(jPanel20Layout);
        jPanel20Layout.setHorizontalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel20Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel29, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel20Layout.setVerticalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel20Layout.createSequentialGroup()
                .addComponent(jLabel29, javax.swing.GroupLayout.PREFERRED_SIZE, 14, Short.MAX_VALUE)
                .addContainerGap())
        );

        sideBar20.add(jPanel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 0, 80, 20));

        jLabel30.setBackground(new java.awt.Color(255, 255, 255));
        jLabel30.setIcon(new javax.swing.ImageIcon(getClass().getResource("/training/Images/bookingData.png"))); // NOI18N
        sideBar20.add(jLabel30, new org.netbeans.lib.awtextra.AbsoluteConstraints(-3, 0, 250, 50));

        sideBar1.add(sideBar20, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 190, 250, -1));

        roomsCount.setBorder(null);
        roomsCount.setFocusable(false);
        sideBar21.add(roomsCount, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 12, 200, 30));

        jPanel21.setBackground(new java.awt.Color(255, 255, 255));

        jLabel31.setForeground(new java.awt.Color(102, 0, 51));
        jLabel31.setText("Nombre de chambre");

        javax.swing.GroupLayout jPanel21Layout = new javax.swing.GroupLayout(jPanel21);
        jPanel21.setLayout(jPanel21Layout);
        jPanel21Layout.setHorizontalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel21Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel31, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel21Layout.setVerticalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel21Layout.createSequentialGroup()
                .addComponent(jLabel31, javax.swing.GroupLayout.PREFERRED_SIZE, 14, Short.MAX_VALUE)
                .addContainerGap())
        );

        sideBar21.add(jPanel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 0, 120, 20));

        jLabel32.setBackground(new java.awt.Color(255, 255, 255));
        jLabel32.setIcon(new javax.swing.ImageIcon(getClass().getResource("/training/Images/bookingData.png"))); // NOI18N
        sideBar21.add(jLabel32, new org.netbeans.lib.awtextra.AbsoluteConstraints(-3, 0, 250, 50));

        sideBar1.add(sideBar21, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 190, 250, -1));

        jPanel22.setBackground(new java.awt.Color(255, 255, 255));

        jLabel33.setForeground(new java.awt.Color(102, 0, 51));
        jLabel33.setText("Total à payer");

        javax.swing.GroupLayout jPanel22Layout = new javax.swing.GroupLayout(jPanel22);
        jPanel22.setLayout(jPanel22Layout);
        jPanel22Layout.setHorizontalGroup(
            jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel22Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel33, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel22Layout.setVerticalGroup(
            jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel22Layout.createSequentialGroup()
                .addComponent(jLabel33, javax.swing.GroupLayout.PREFERRED_SIZE, 14, Short.MAX_VALUE)
                .addContainerGap())
        );

        sideBar22.add(jPanel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 0, 80, 20));

        total.setText("0");
        total.setBorder(null);
        total.setFocusable(false);
        sideBar22.add(total, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 12, 170, 30));

        jLabel2.setText("Ar");
        sideBar22.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 10, 20, 30));

        jLabel34.setBackground(new java.awt.Color(255, 255, 255));
        jLabel34.setIcon(new javax.swing.ImageIcon(getClass().getResource("/training/Images/bookingData.png"))); // NOI18N
        sideBar22.add(jLabel34, new org.netbeans.lib.awtextra.AbsoluteConstraints(-3, 0, 250, 50));

        sideBar1.add(sideBar22, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 190, 250, -1));

        updateVisitListTable.setBackground(Color.WHITE);
        updateVisitListTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "", "N°", "Désignation", "Type", "Prix Nuité (Ar)"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Boolean.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        updateVisitListTable.setGridColor(new java.awt.Color(0, 51, 204));
        updateVisitListTable.setRowHeight(35);
        updateVisitListTable.setShowHorizontalLines(true);
        jScrollPane1.setViewportView(updateVisitListTable);
        //jScrollPane1.getViewport().setOpaque(false);
        jScrollPane1.getViewport().setBackground(new Color(255, 255, 255));
        updateVisitListTable.setDefaultRenderer(Object.class, new CenteredTableCellRenderer());

        // Créer une instance de CenteredHeaderRenderer avec la hauteur souhaitée
        int headerHeight2 = 35;
        Color backgroundColor2 = new Color(0, 51, 204); // Couleur de fond (SteelBlue)
        Color foregroundColor2 = Color.WHITE; // Couleur du texte (blanc)
        CenteredHeaderRenderer headerRenderer2 = new CenteredHeaderRenderer(headerHeight2, backgroundColor2, foregroundColor2);

        // Récupérer le modèle de colonne de la JTable
        TableColumnModel columnModel2 = updateVisitListTable.getColumnModel();

        // Appliquer le rendu de l'en-tête à chaque colonne de la JTable
        for (int i = 0; i < columnModel2.getColumnCount(); i++) {
            TableColumn column = columnModel2.getColumn(i);
            column.setHeaderRenderer(headerRenderer2);
        }

        sideBar1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 350, 940, 310));

        jButton1.setBackground(new java.awt.Color(204, 204, 204));
        jButton1.setText("Annuler");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        sideBar1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 250, -1, 30));

        jButton2.setBackground(new java.awt.Color(153, 153, 153));
        jButton2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("Enregistrer");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        sideBar1.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 250, -1, 30));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/training/Images/visitB.png"))); // NOI18N
        sideBar1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, 960, 290));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(51, 102, 0));
        jLabel3.setText("Mise à jour du séjour");
        sideBar1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 0, 260, 30));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(sideBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 986, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(sideBar1, javax.swing.GroupLayout.DEFAULT_SIZE, 691, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        int i = 0;
        if (phoneField.getText().equals("Téléphone")) {
            String phone = customerPhone.getText().replaceAll("\\s+", "");
            if (!customerSurname.getText().equals("") && !customerFirstName.getText().equals("") && !customerPhone.getText().equals("") && phone.length() == 10) {
                String name = customerSurname.getText() + " " + customerFirstName.getText();
                if (total.getText().equals("0") && !name.equals(lastData[0]) || total.getText().equals("0") && !phone.equals(lastData[1])) {
                    try {
                        UpdateVisitCustomerInfo.updateVisitCustomerInfo(lastData, name, phone, "séjourner");
                    } catch (ParseException ex) {
                        Logger.getLogger(UpdateVisitListField2.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    System.out.println("A");
                    i++;
                }
                if (!total.getText().equals("0") && name.equals(lastData[0]) && phone.equals(lastData[1])) {
                    ArrayList<String> newRooms = new ArrayList<>();
                    for (String r : roomsNb.getText().split(", ")) {
                        if (!lastData[5].contains(r)) newRooms.add(r);
                    }
                    try {
                        InsertUpdateVisitRoom.insertUpdateVisitRoom(lastData, newRooms, "séjourner");
                        String tmpTotal = total.getText().replaceAll("[^0-9]", "");
                        int totalAmount = Integer.parseInt(tmpTotal);
                        UpdateBalance.updateBalance(totalAmount);
                    } catch (ParseException ex) {
                        Logger.getLogger(UpdateVisitListField2.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    System.out.println("B");
                    i++;
                }
                if (i == 0) {
                    ArrayList<String> newRooms = new ArrayList<>();
                    for (String r : roomsNb.getText().split(", ")) {
                        if (!lastData[5].contains(r)) newRooms.add(r);
                    }
                    try {
                        UpdateVisitCustomerInfo.updateVisitCustomerInfo(lastData, name, phone, "séjourner");
                        String[] info = {customerSurname.getText() + " " + customerFirstName.getText(), customerPhone.getText(), enterDate.getText(), exitDate.getText(), dayNb.getText(), roomsNb.getText()};
                        InsertUpdateVisitRoom.insertUpdateVisitRoom(info, newRooms, "séjourner");
                        String tmpTotal = total.getText().replaceAll("[^0-9]", "");
                        int totalAmount = Integer.parseInt(tmpTotal);
                        UpdateBalance.updateBalance(totalAmount);
                    } catch (ParseException ex) {
                        Logger.getLogger(UpdateVisitListField2.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    System.out.println("C");
                }
                dispose();
            } else {
                JOptionPane.showMessageDialog(this, "Veuiller remplir correctement tous les champs", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            if (!customerSurname.getText().equals("") && !customerFirstName.getText().equals("") && !customerPhone.getText().equals("") && ValidEmailFormat.isValidEmail(customerPhone.getText())) {
                String name = customerSurname.getText() + " " + customerFirstName.getText();
                if (total.getText().equals("0") && !name.equals(lastData[0]) || total.getText().equals("0") && !customerPhone.getText().equals(lastData[1])) {
                    try {
                        UpdateVisitCustomerInfo.updateVisitCustomerInfo(lastData, name, customerPhone.getText(), "occuper");
                    } catch (ParseException ex) {
                        Logger.getLogger(UpdateVisitListField2.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    i++;
                }
                if (!total.getText().equals("0") && name.equals(lastData[0]) && customerPhone.getText().equals(lastData[1])) {
                    ArrayList<String> newRooms = new ArrayList<>();
                    for (String r : roomsNb.getText().split(", ")) {
                        if (!lastData[5].contains(r)) newRooms.add(r);
                    }
                    try {
                        InsertUpdateVisitRoom.insertUpdateVisitRoom(lastData, newRooms, "occuper");
                        String tmpTotal = total.getText().replaceAll("[^0-9]", "");
                        int totalAmount = Integer.parseInt(tmpTotal);
                        UpdateBalance.updateBalance(totalAmount);
                    } catch (ParseException ex) {
                        Logger.getLogger(UpdateVisitListField2.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    i++;
                }
                if (i == 0) {
                    ArrayList<String> newRooms = new ArrayList<>();
                    for (String r : roomsNb.getText().split(", ")) {
                        if (!lastData[5].contains(r)) newRooms.add(r);
                    }
                    try {
                        UpdateVisitCustomerInfo.updateVisitCustomerInfo(lastData, name, customerPhone.getText(), "occuper");
                        String[] info = {customerSurname.getText() + " " + customerFirstName.getText(), customerPhone.getText(), enterDate.getText(), exitDate.getText(), dayNb.getText(), roomsNb.getText()};
                        InsertUpdateVisitRoom.insertUpdateVisitRoom(info, newRooms, "occuper");
                        String tmpTotal = total.getText().replaceAll("[^0-9]", "");
                        int totalAmount = Integer.parseInt(tmpTotal);
                        UpdateBalance.updateBalance(totalAmount);
                    } catch (ParseException ex) {
                        Logger.getLogger(UpdateVisitListField2.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
                dispose();
            } else {
                JOptionPane.showMessageDialog(this, "Veuiller remplir correctement tous les champs", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
       
    }//GEN-LAST:event_jButton2ActionPerformed
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void addWindowCloseListener() {
        this.addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosing(WindowEvent e) {
                handleWindowClosing();
            }
        });
    }

    // Méthode pour gérer la fermeture de la fenêtre
    private void handleWindowClosing() {
        mainF.resetVisitList();
    }

    @Override
    public void dispose() {
        handleWindowClosing(); // Appeler la méthode de gestion de la fermeture avant de disposer de la fenêtre
        super.dispose(); // Appeler la méthode dispose() de la superclasse
    }
    
    public void initLastData(String[] lastData) {
        this.lastData = lastData;
    }
    
    public void display_AvailableBookingRooms(Date startDate, Date endDate ) {
        ArrayList<String[]> listData = AvailableBookingRooms.selectRooms(startDate, endDate);
        DefaultTableModel tblModel = (DefaultTableModel) updateVisitListTable.getModel();
        tblModel.setRowCount(0); // Effacer toutes les lignes existantes
        if (!listData.isEmpty()) {
            for (String[] data : listData) {
                // Créer un nouveau tableau d'objets pour représenter la ligne de la table
                Object[] rowData = new Object[data.length + 1]; // +1 pour la colonne booléenne

                // La première colonne est un booléen initialisé à false
                rowData[0] = false;

                // Copier les données de la liste dans les colonnes suivantes
                System.arraycopy(data, 0, rowData, 1, data.length);

                // Ajouter la ligne au modèle de la table
                tblModel.addRow(rowData);
            }
        }else {
            System.out.print("Vide");
        }
            

        // Ajouter des écouteurs aux checkboxes
        addCheckboxListeners(updateVisitListTable);
    }
    
    private void addCheckboxListeners(JTable table) {
        TableColumn checkBoxColumn = table.getColumnModel().getColumn(0);
        checkBoxColumn.setCellEditor(new DefaultCellEditor(new JCheckBox()));
        checkBoxColumn.setCellRenderer(table.getDefaultRenderer(Boolean.class));
        table.getModel().addTableModelListener(e -> recoverAvailableRooms());
    }
    
    private void recoverAvailableRooms() {
        ArrayList<String> roomsNB = getCheckedValues(updateVisitListTable);
        String rooms = new String();
        int i = 0;
        if (!roomsNB.isEmpty()) {
            for (String room : roomsNB) {
                if (i == 0) {
                    rooms = lastData[5] + ", " + room;
                    i+=1;
                } else {
                    rooms+=", "+room;
                }
            }
        } else {
            rooms = lastData[5];
        }
       
        roomsNb.setForeground(Color.BLACK);
        roomsNb.setText(rooms);
    }
    
    public ArrayList<String> getCheckedValues(JTable table) {
        ArrayList<String> checkedValues = new ArrayList<>();
        ArrayList<String> amount = new ArrayList<>();
        DefaultTableModel tblModel = (DefaultTableModel) table.getModel();
            for (int i = 0; i < tblModel.getRowCount(); i++) {
                // Vérifier si la checkbox de la première colonne est cochée
                if ((Boolean) tblModel.getValueAt(i, 0)) {
                    // Ajouter la valeur de la deuxième colonne à la liste
                    checkedValues.add((String) tblModel.getValueAt(i, 1));
                    amount.add((String) tblModel.getValueAt(i, 4));
                }
            }    
        totalPayed(amount);    
        return checkedValues;
    }
    
    private void totalPayed(ArrayList<String> amount) {
        // Obtenir la date d'aujourd'hui
        LocalDate today = LocalDate.now();
        String tmpExit = exitDate.getText().replace(" / ", "/");
        LocalDate exit = LocalDate.parse(tmpExit, formatter);
        
        long daysBetween = Math.abs(ChronoUnit.DAYS.between(today, exit));
        int duration = (int) daysBetween;
        
        int r = 0;
        for (String value : amount) {
            String v = value.replaceAll("[^0-9]", "");
            System.out.println(v);
            r += Integer.parseInt(v);
        }
        
        total.setText(String.valueOf(nbFormat.format(duration*r)));
    }
    
    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(UpdateVisitListField2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(UpdateVisitListField2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(UpdateVisitListField2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(UpdateVisitListField2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new UpdateVisitListField2().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JTextField customerFirstName;
    public javax.swing.JTextField customerPhone;
    public javax.swing.JTextField customerSurname;
    public javax.swing.JTextField dayNb;
    public javax.swing.JTextField enterDate;
    public javax.swing.JTextField exitDate;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel20;
    private javax.swing.JPanel jPanel21;
    private javax.swing.JPanel jPanel22;
    private javax.swing.JScrollPane jScrollPane1;
    public javax.swing.JLabel phoneField;
    public javax.swing.JTextField roomsCount;
    public javax.swing.JTextField roomsNb;
    private training.SideBar sideBar1;
    private training.SideBar sideBar14;
    private training.SideBar sideBar15;
    private training.SideBar sideBar16;
    private training.SideBar sideBar17;
    private training.SideBar sideBar18;
    private training.SideBar sideBar19;
    private training.SideBar sideBar20;
    private training.SideBar sideBar21;
    private training.SideBar sideBar22;
    public javax.swing.JTextField total;
    public javax.swing.JTable updateVisitListTable;
    // End of variables declaration//GEN-END:variables
}
